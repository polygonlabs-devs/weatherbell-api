/**
 * Weather API for Vizrt
 * This is a Weather API to provide Weather Data to a Vizrt Graphics System
 *
 * OpenAPI spec version: 1.0.3
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Change', 'model/UnitTemp'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Change'), require('./UnitTemp'));
  } else {
    // Browser globals (root is window)
    if (!root.WeatherApiForVizrt) {
      root.WeatherApiForVizrt = {};
    }
    root.WeatherApiForVizrt.Temperature = factory(root.WeatherApiForVizrt.ApiClient, root.WeatherApiForVizrt.Change, root.WeatherApiForVizrt.UnitTemp);
  }
}(this, function(ApiClient, Change, UnitTemp) {
  'use strict';




  /**
   * The Temperature model module.
   * @module model/Temperature
   * @version 1.0.3
   */

  /**
   * Constructs a new <code>Temperature</code>.
   * @alias module:model/Temperature
   * @class
   * @extends module:model/Change
   */
  var exports = function() {
    var _this = this;
    Change.call(_this);








  };

  /**
   * Constructs a <code>Temperature</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Temperature} obj Optional instance to populate.
   * @return {module:model/Temperature} The populated <code>Temperature</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      Change.constructFromObject(data, obj);
      if (data.hasOwnProperty('current')) {
        obj['current'] = ApiClient.convertToType(data['current'], 'Number');
      }
      if (data.hasOwnProperty('unit')) {
        obj['unit'] = UnitTemp.constructFromObject(data['unit']);
      }
      if (data.hasOwnProperty('feelsLike')) {
        obj['feelsLike'] = ApiClient.convertToType(data['feelsLike'], 'Number');
      }
      if (data.hasOwnProperty('windChill')) {
        obj['windChill'] = ApiClient.convertToType(data['windChill'], 'Number');
      }
      if (data.hasOwnProperty('dewPoint')) {
        obj['dewPoint'] = ApiClient.convertToType(data['dewPoint'], 'Number');
      }
      if (data.hasOwnProperty('heatIndex')) {
        obj['heatIndex'] = ApiClient.convertToType(data['heatIndex'], 'Number');
      }
      if (data.hasOwnProperty('max24hr')) {
        obj['max24hr'] = ApiClient.convertToType(data['max24hr'], 'Number');
      }
      if (data.hasOwnProperty('min24hr')) {
        obj['min24hr'] = ApiClient.convertToType(data['min24hr'], 'Number');
      }
      if (data.hasOwnProperty('max12hr')) {
        obj['max12hr'] = ApiClient.convertToType(data['max12hr'], 'Number');
      }
      if (data.hasOwnProperty('min12hr')) {
        obj['min12hr'] = ApiClient.convertToType(data['min12hr'], 'Number');
      }
    }
    return obj;
  }

  exports.prototype = Object.create(Change.prototype);
  exports.prototype.constructor = exports;

  /**
   * @member {Number} current
   */
  exports.prototype['current'] = undefined;
  /**
   * @member {module:model/UnitTemp} unit
   */
  exports.prototype['unit'] = undefined;
  /**
   * @member {Number} feelsLike
   */
  exports.prototype['feelsLike'] = undefined;
  /**
   * @member {Number} windChill
   */
  exports.prototype['windChill'] = undefined;
  /**
   * @member {Number} dewPoint
   */
  exports.prototype['dewPoint'] = undefined;
  /**
   * @member {Number} heatIndex
   */
  exports.prototype['heatIndex'] = undefined;
  /**
   * maximum over 24 hours
   * @member {Number} max24hr
   */
  exports.prototype['max24hr'] = undefined;
  /**
   * minimum over 24 hours
   * @member {Number} min24hr
   */
  exports.prototype['min24hr'] = undefined;
  /**
   * maximum over 12 hours
   * @member {Number} max12hr
   */
  exports.prototype['max12hr'] = undefined;
  /**
   * minimum over 12 hours
   * @member {Number} min12hr
   */
  exports.prototype['min12hr'] = undefined;


  return exports;
}));


