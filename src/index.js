/**
 * Weather API for Vizrt
 * This is a Weather API to provide Weather Data to a Vizrt Graphics System
 *
 * OpenAPI spec version: 1.0.7
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Change', 'model/Conditions', 'model/Cumulative', 'model/CumulativePressure', 'model/CumulativeRain', 'model/CumulativeSnow', 'model/CumulativeTemperature', 'model/Humidity', 'model/Ice', 'model/Location', 'model/PointData', 'model/Pressure', 'model/Rain', 'model/Series', 'model/SeriesData', 'model/Snow', 'model/Stats', 'model/SunMoon', 'model/Temperature', 'model/Total', 'model/UnitPressure', 'model/UnitRain', 'model/UnitSnow', 'model/UnitTemp', 'model/Wind', 'api/DefaultApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/Change'), require('./model/Conditions'), require('./model/Cumulative'), require('./model/CumulativePressure'), require('./model/CumulativeRain'), require('./model/CumulativeSnow'), require('./model/CumulativeTemperature'), require('./model/Humidity'), require('./model/Ice'), require('./model/Location'), require('./model/PointData'), require('./model/Pressure'), require('./model/Rain'), require('./model/Series'), require('./model/SeriesData'), require('./model/Snow'), require('./model/Stats'), require('./model/SunMoon'), require('./model/Temperature'), require('./model/Total'), require('./model/UnitPressure'), require('./model/UnitRain'), require('./model/UnitSnow'), require('./model/UnitTemp'), require('./model/Wind'), require('./api/DefaultApi'));
  }
}(function(ApiClient, Change, Conditions, Cumulative, CumulativePressure, CumulativeRain, CumulativeSnow, CumulativeTemperature, Humidity, Ice, Location, PointData, Pressure, Rain, Series, SeriesData, Snow, Stats, SunMoon, Temperature, Total, UnitPressure, UnitRain, UnitSnow, UnitTemp, Wind, DefaultApi) {
  'use strict';

  /**
   * This_is_a_Weather_API_to_provide_Weather_Data_to_a_Vizrt_Graphics_System.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var WeatherApiForVizrt = require('index'); // See note below*.
   * var xxxSvc = new WeatherApiForVizrt.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new WeatherApiForVizrt.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new WeatherApiForVizrt.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new WeatherApiForVizrt.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.0.7
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The Change model constructor.
     * @property {module:model/Change}
     */
    Change: Change,
    /**
     * The Conditions model constructor.
     * @property {module:model/Conditions}
     */
    Conditions: Conditions,
    /**
     * The Cumulative model constructor.
     * @property {module:model/Cumulative}
     */
    Cumulative: Cumulative,
    /**
     * The CumulativePressure model constructor.
     * @property {module:model/CumulativePressure}
     */
    CumulativePressure: CumulativePressure,
    /**
     * The CumulativeRain model constructor.
     * @property {module:model/CumulativeRain}
     */
    CumulativeRain: CumulativeRain,
    /**
     * The CumulativeSnow model constructor.
     * @property {module:model/CumulativeSnow}
     */
    CumulativeSnow: CumulativeSnow,
    /**
     * The CumulativeTemperature model constructor.
     * @property {module:model/CumulativeTemperature}
     */
    CumulativeTemperature: CumulativeTemperature,
    /**
     * The Humidity model constructor.
     * @property {module:model/Humidity}
     */
    Humidity: Humidity,
    /**
     * The Ice model constructor.
     * @property {module:model/Ice}
     */
    Ice: Ice,
    /**
     * The Location model constructor.
     * @property {module:model/Location}
     */
    Location: Location,
    /**
     * The PointData model constructor.
     * @property {module:model/PointData}
     */
    PointData: PointData,
    /**
     * The Pressure model constructor.
     * @property {module:model/Pressure}
     */
    Pressure: Pressure,
    /**
     * The Rain model constructor.
     * @property {module:model/Rain}
     */
    Rain: Rain,
    /**
     * The Series model constructor.
     * @property {module:model/Series}
     */
    Series: Series,
    /**
     * The SeriesData model constructor.
     * @property {module:model/SeriesData}
     */
    SeriesData: SeriesData,
    /**
     * The Snow model constructor.
     * @property {module:model/Snow}
     */
    Snow: Snow,
    /**
     * The Stats model constructor.
     * @property {module:model/Stats}
     */
    Stats: Stats,
    /**
     * The SunMoon model constructor.
     * @property {module:model/SunMoon}
     */
    SunMoon: SunMoon,
    /**
     * The Temperature model constructor.
     * @property {module:model/Temperature}
     */
    Temperature: Temperature,
    /**
     * The Total model constructor.
     * @property {module:model/Total}
     */
    Total: Total,
    /**
     * The UnitPressure model constructor.
     * @property {module:model/UnitPressure}
     */
    UnitPressure: UnitPressure,
    /**
     * The UnitRain model constructor.
     * @property {module:model/UnitRain}
     */
    UnitRain: UnitRain,
    /**
     * The UnitSnow model constructor.
     * @property {module:model/UnitSnow}
     */
    UnitSnow: UnitSnow,
    /**
     * The UnitTemp model constructor.
     * @property {module:model/UnitTemp}
     */
    UnitTemp: UnitTemp,
    /**
     * The Wind model constructor.
     * @property {module:model/Wind}
     */
    Wind: Wind,
    /**
     * The DefaultApi service constructor.
     * @property {module:api/DefaultApi}
     */
    DefaultApi: DefaultApi
  };

  return exports;
}));
