/**
 * Weather API for Vizrt
 * This is a Weather API to provide Weather Data to a Vizrt Graphics System
 *
 * OpenAPI spec version: 1.0.3
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.WeatherApiForVizrt);
  }
}(this, function(expect, WeatherApiForVizrt) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new WeatherApiForVizrt.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('currentByLatLngGet', function() {
      it('should call currentByLatLngGet successfully', function(done) {
        //uncomment below and update the code to test currentByLatLngGet
        //instance.currentByLatLngGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('currentByLocationIdGet', function() {
      it('should call currentByLocationIdGet successfully', function(done) {
        //uncomment below and update the code to test currentByLocationIdGet
        //instance.currentByLocationIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('forecastByLatLngGet', function() {
      it('should call forecastByLatLngGet successfully', function(done) {
        //uncomment below and update the code to test forecastByLatLngGet
        //instance.forecastByLatLngGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('forecastByLocationIdGet', function() {
      it('should call forecastByLocationIdGet successfully', function(done) {
        //uncomment below and update the code to test forecastByLocationIdGet
        //instance.forecastByLocationIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('historicalByLatLngGet', function() {
      it('should call historicalByLatLngGet successfully', function(done) {
        //uncomment below and update the code to test historicalByLatLngGet
        //instance.historicalByLatLngGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('historicalByLocationIdGet', function() {
      it('should call historicalByLocationIdGet successfully', function(done) {
        //uncomment below and update the code to test historicalByLocationIdGet
        //instance.historicalByLocationIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('observationByLatLngGet', function() {
      it('should call observationByLatLngGet successfully', function(done) {
        //uncomment below and update the code to test observationByLatLngGet
        //instance.observationByLatLngGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('observationByLocationIdGet', function() {
      it('should call observationByLocationIdGet successfully', function(done) {
        //uncomment below and update the code to test observationByLocationIdGet
        //instance.observationByLocationIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
